#!/bin/sh /etc/rc.common
# Copyright (C) 2021 OpenWrt.org
# Copyright (c) 2021 billsq <billsq@billsq.me>

START=89
STOP=11

USE_PROCD=1
PROG=/usr/bin/tinymapper

validate_tinymapper_section()
{
	uci_validate_section tinymapper tinymapper "${1}" \
		'enabled:bool:0'		\
		'local:string'			\
		'remote:string'			\
		'tcp:bool:1' 			\
		'udp:bool:0' 			\
		'sock_buf:integer:1024' \
		'log_level:integer:4'
}

try_resolve_host()
{
	local host_port host port resolved

	host_port=${1}
	host=$(echo $host_port | cut -d : -f 1)
	port=$(echo $host_port | cut -d : -f 2)

	#  Try resolve host using dig if host is not an IP address
	if [[ ! $host =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
		resolved=`dig +short $host | tail -1`
		while [[ -z $resolved ]] || [[ ! $resolved =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; do
			sleep 2
			resolved=`dig +short $host | tail -1`
		done
		logger -t "tinymapper" "resolved host ${host} to ${resolved}"
		host=$resolved
	fi

	echo "${host}:${port}"
}

start_instance()
{
	local section="$1"

	local enabled local remote tcp udp sock_buf log_level

	validate_tinymapper_section $section || {
		echo "validation failed"
		return 1
	}

	if [ "${enabled}" -ne 1 ]; then
		return 1
	fi

	if [ "${tcp}" -ne 1 ] && [ "${udp}" -ne 1 ]; then
		return 1
	fi

	procd_open_instance
	procd_set_param stderr 1
	procd_set_param stdout 1

	procd_set_param command "${PROG}"

	procd_append_param command -r $(try_resolve_host $remote)
	procd_append_param command -l $(try_resolve_host $local)
	
	if [ "${tcp}" -eq 1 ]; then
		procd_append_param command -t
	fi

	if [ "${udp}" -eq 1 ]; then
		procd_append_param command -u
	fi
	
	procd_append_param command --sock-buf "${sock_buf}"
	procd_append_param command --log-level "${log_level}"
	procd_append_param command --disable-color
	
	procd_set_param respawn ${respawn_threshold:-60} ${respawn_timeout:-5} ${respawn_retry:-5}
	procd_close_instance
}

start_service()
{
	config_load 'tinymapper'
	config_foreach start_instance 'tinymapper'
}

stop_service()
{
	service_stop ${PROG}
}

service_triggers()
{
	procd_add_reload_trigger "tinymapper"
	procd_add_validation validate_tinymapper_section
}
