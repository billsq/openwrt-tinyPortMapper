#!/bin/sh /etc/rc.common
# Copyright (C) 2021 OpenWrt.org
# Copyright (c) 2021 billsq <billsq@billsq.me>

START=89
STOP=11

USE_PROCD=1
PROG=/usr/bin/tinymapper

validate_tinymapper_section()
{
	uci_validate_section tinymapper tinymapper "${1}" \
		'enabled:bool:0'		\
		'local:string'			\
		'remote:string'			\
		'tcp:bool:1' 			\
		'udp:bool:0' 			\
		'sock_buf:integer:1024' \
		'log_level:integer:4'
}

try_resolve_host()
{
	local host_port host port ip

	host_port=${1}
	port=$(echo ${host_port} | grep -o "[^:]*$")
	host=${host_port:0:`expr -1 - ${#port}`}

	ip=${host}
	while true; do
		if [[ $ip =~ "^([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$" ]]; then
			# This is IPV4 address
			break
		else
			# Before checking IPV6 address, remove the possible square brackets first
			if [[ $ip =~ "^\[.*\]$" ]]; then
				ip=${ip:1:-1}
			fi

			if [[ $ip =~ "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$" ]]; then
				# This is IPV6 address, add square brackets
				ip="[${ip}]"
				break
			fi
		fi

		# This must be a domain, resolve it here
		ip=`resolveip $host | tail -1`
		while [[ -z $ip ]]; do
			sleep 2
			ip=`resolveip $host | tail -1 `
		done
	done

	echo "${ip}:${port}"
}

start_instance()
{
	local section="$1"

	local enabled local remote tcp udp sock_buf log_level

	validate_tinymapper_section $section || {
		echo "validation failed"
		return 1
	}

	if [ "${enabled}" -ne 1 ]; then
		return 1
	fi

	if [ "${tcp}" -ne 1 ] && [ "${udp}" -ne 1 ]; then
		return 1
	fi

	procd_open_instance
	procd_set_param stderr 1
	procd_set_param stdout 1

	procd_set_param command "${PROG}"

	procd_append_param command -r $(try_resolve_host $remote)
	procd_append_param command -l $(try_resolve_host $local)
	
	if [ "${tcp}" -eq 1 ]; then
		procd_append_param command -t
	fi

	if [ "${udp}" -eq 1 ]; then
		procd_append_param command -u
	fi
	
	procd_append_param command --sock-buf "${sock_buf}"
	procd_append_param command --log-level "${log_level}"
	procd_append_param command --disable-color
	
	procd_set_param respawn ${respawn_threshold:-60} ${respawn_timeout:-5} ${respawn_retry:-5}
	procd_close_instance
}

start_service()
{
	config_load 'tinymapper'
	config_foreach start_instance 'tinymapper'
}

stop_service()
{
	service_stop ${PROG}
}

service_triggers()
{
	procd_add_reload_trigger "tinymapper"
	procd_add_validation validate_tinymapper_section
}
